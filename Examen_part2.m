%% EXAMPLE: Differential drive vehicle following waypoints using the 
% Pure Pursuit algorithm
%
% Copyright 2018-2019 The MathWorks, Inc.

%% Define Vehicle
R = 0.1;                % Wheel radius [m]
L = 0.5;                % Wheelbase [m]
dd = DifferentialDrive(R,L);

%% Simulation parameters
sampleTime = 0.05;               % Sample time [s]
tVec = 0:sampleTime:500;        % Time array
%{
Ejercicio 1: tVec = 0:sampleTime:34.2; 
Ejercicio 2: tVec = 0:sampleTime:19;
Ejercicio 3: tVec = 0:sampleTime:14;  
Dog: tVec = 0:sampleTime:143;  
Flower: tVec = 0:sampleTime:131; 
Cherry: tVec = 0:sampleTime:83.4; 
%}


initPose = [1.09114;3.19;0]; % Initial pose (x y theta) %apple =  [9;5;3*pi/4]; 


pose = zeros(3,numel(tVec));    % Pose matrix
pose(:,1) = initPose;

waypoints = [ 1.091154025644565, 3.19033768004285; 0.9886180863950242, 3.3657738545326024; 0.9293466783763704, 3.2805712055057876;
0.9256422153752045, 3.0916435924463292; 0.9886180863950242, 2.8323311823647193; 1.0960475134288346, 2.5544964572772804; 1.0664118094195074, 2.85826242337288; 1.0034359383996878, 3.0768257404416657;
1.0775251984230052, 3.0064409434195145; 1.1029822913875107, 2.2271295212771127; 1.1875153739744246, 1.88899719092946; 1.285837298655561, 1.5695341694899858; 1.3981870036330453, 1.2886599070462772;
1.5105367086105297, 1.1388603004096327; 1.6696987906619658, 0.9609732675286172; 1.856948298957773, 0.8205361363067629; 2.016110381009209, 0.6800990050849087; 2.1846349384754356, 0.5771117755222155;
2.3718844467712428, 0.4553995951299418; 2.5497714796522595, 0.42731216888557094; 2.8025583158515994, 0.3992247426412001; 3.08343257829531, 0.4085872180559904; 3.242594660346746, 0.5302993984482641;
3.4579315948869245, 0.7175489067440698; 3.673268529427103, 0.9047984150398756; 3.9166928902116522, 1.0920479233356812; 4.084630089612906, 1.2372353053199587; 4.244604195706773, 1.5631084844000553;
4.333478699092255, 1.8001071600946712; 4.392728368015909, 2.0904305378205756; 4.416428235585371, 2.2859544452686333; 4.5, 2.5; 4.564552407894507, 2.6770022601647496;
4.576402341679238, 2.8725261676128073; 4.576402341679238, 3.0206503399219424; 4.558627441002142, 3.162849545338712; 4.463827970724294, 3.150999611553981; 4.5, 3.0;
4.481602871401391, 2.866601200720442; 4.381025706835165, 3.6020276963444986; 4.340086946307749, 3.9397724706956776; 4.340086946307749, 4.400333526629103; 4.012576862088422, 4.779017061507697;
3.726005538396512, 4.953006793749214; 3.4599035949683095, 5.055353695067753; 3.0, 5.0; 2.6435255811954286, 5.000180776920729; 2.454606113959858, 5.075748563814957;
2.1145510729358303, 5.12612708841111; 1.8311718720824741, 5.113532457262072; 1.604468511399789, 5.025370039218806; 1.3399812572699898, 4.584557949002475; 1.4596302531858514, 4.823855940834197;
1.2833054170993186, 4.320070694872676; 1.2518188392267233, 3.9989076005722066; 1.1573591056089378, 3.6966364529952944; 1.1195752121618237, 3.4006626209929007; 0.8802772203301006, 3.539203563632319;
0.8236013801594294, 3.8099881333366366; 0.7543309088397201, 4.074475387466435; 0.6976550686690488, 4.3956384817669045; 0.6724658063709726, 4.723098891641893; 0.8047094334358723, 5.037964670367844;
0.9637924320082579, 5.198195225427283; 0.7773402753444545, 5.433579147314592; 0.8112320420337243, 5.69341602526566; 1.0, 6.0; 1.253991199602809, 6.274510152915548;
1.5, 6.5; 2.0167872297668543, 6.642569349282055; 2.447812296609301, 6.509946251792073; 2.9617267993829874, 6.5431020261645685; 3.2767066559216986, 6.460212590233329;
3.674575948391649, 6.244700056812107; 4.155334676792839, 6.277855831184603; 4.321113548655319, 6.06234329776338; 4.437158758959055, 5.647896118107185; 4.669249179566526, 5.448961471872211;
4.851605938615253, 5.117403728147254; 4.967651148918989, 4.603489225373571; 4.967651148918989, 4.189042045717375; 4.868183825801501, 3.940373737923658; 4.669249179566526, 3.608815994198701;
4.324332236224968, 3.332933548584499; 4.144496892405522, 3.450518196466443; 4.0, 3.5; 3.7571592287944098, 3.5750195883414424; 3.411322029141631, 3.5611861003553313;
3.245320173308297, 3.4712684284456095; 3.10006854945413, 3.505852148410887; 3.3144876132388528, 3.699520980216442; 3.5358234210166315, 3.754854932160886; 3.7364089968152427, 3.789438652126164;
3.936994572613855, 3.7756051641400528; 4.123746660426355, 3.6926042362233864; 4.1790806123708, 3.2637661086539436; 3.978495036572188, 3.2084321567094993; 3.7917429487596874, 3.2914330846261657;
3.5911573729610757, 3.3121833166053323; 3.4528224930999647, 3.2914330846261657; 3.3421545892110753, 3.2637661086539436; 3.480489469072187, 3.1738484367442217; 3.7364089968152427, 3.1185144847997774;
3.867827132683299, 3.139264716778944; 2.5, 3.5; 2.3464781618102784, 3.5419936070846076; 2.092167231743553, 3.598507147099435; 1.8265535936738626, 3.5815530850949866;
1.6174534956189999, 3.5250395450801593; 1.481820999583413, 3.4176638190519872; 1.380096627556723, 3.3554989250356773; 1.3913993355596885, 3.513736837077194; 1.487472353584896, 3.7115342271290896;
1.6231048496204825, 3.785001829148365; 1.792645469664966, 3.785001829148365; 1.945232027705001, 3.785001829148365; 2.1486807717583813, 3.7567450591409512; 2.295615975796933, 3.700231519126124;
2.4764593038443823, 3.621112563105366; 1.5557082034201466, 3.219185778872179; 1.6814802914634799, 3.139148995571877; 1.812969292599692, 3.0819798646430896; 1.9901935984789347, 3.093413690828847;
2.178851730543935, 3.104847517014605; 2.338925297144541, 3.1505828217576344; 2.3130334863328783, 3.2571850197763212; 2.2081132218633166, 3.297538967649229; 2.089741641436119, 3.3190610731814467;
1.9525382186682305, 3.3298221259475556; 1.8691400597308867, 3.321751336372974; 1.774980848027434, 3.308300020415338; 1.6862021627070358, 3.2894681780746478; 2.657555073974209, 3.280912739924274;
2.657555073974209, 3.153523998750621; 2.637441062209948, 2.8048811281700985; 2.670964415150383, 3.039544598753143; 2.6106223798576, 2.6171503517036627; 2.5, 2.5;
2.4094822622149885, 2.3958962222967926; 2.2820935210413347, 2.2953261634754876; 2.268684179865161, 2.167937422301835; 2.4161869328030754, 2.0941860458328785; 2.5, 2.0;
2.7581251327955143, 2.0472533517162694; 3.0, 2.0; 3.2006333916092586, 2.0740720340686174; 3.234156744549694, 2.275212151711227; 3.1134726739641274, 2.3958962222967926;
2.9793792622023867, 2.583626998763228; 2.9726745916142994, 2.8182904693462723; 2.9726745916142994, 3.0797726222816646; 3.0, 2.0; 2.9631296060229406, 3.2331168900750975;
2.1174271165459446, 1.3964486561401896; 2.2934805765865476, 1.3894065177385655; 2.4765761750287747, 1.3894065177385655; 2.6103768046596327, 1.3401115489271973; 2.8145988183067323, 1.318985133722325;
2.983610139945711, 1.3612379641320693; 3.103326492773321, 1.3753222409353174; 3.2723378144122997, 1.4105329329434377; 3.420222720846406, 1.43165934814831; 3.349801336830165, 1.304900856919077;
3.237127122404179, 1.2415216113044605; 2.8850202023229734, 1.1499738120833476; 3.049484045506221, 1.2228253239978735; 2.704796573215084, 1.1576141805914428; 2.5650584087727313, 1.2088515075536383;
2.4439519995893586, 1.250772956886344; 2.2948979575175157, 1.3020102838485395; 2.2855820798880258, 1.525591346956302; 2.411346427886143, 1.5675127962890074; 2.5650584087727313, 1.604776306806968;
2.6582171850676333, 1.5675127962890074; 2.7839815330657505, 1.530249285771047; 2.937693513952339, 1.5861445515479877; 3.063457861950456, 1.5675127962890074; 3.1705904546895933, 1.5675127962890074;
3.2637492309844953, 1.5488810410300273; 1.4375068790547214, 0.9012255736157359; 1.13983368428591, 0.871458254138855; 4.205867590404669, 0.9012255736157359; 4.488657125435039, 0.7821562957082127;
3.2270563747570242, 5.060295892870758]


% Create visualizer
viz = Visualizer2D;
viz.hasWaypoints = true;

%% Pure Pursuit Controller
controller = controllerPurePursuit;
controller.Waypoints = waypoints;
controller.LookaheadDistance = 0.2; 
controller.DesiredLinearVelocity = 0.1;  
controller.MaxAngularVelocity = 500;

  


%% Simulation loop
close all
r = rateControl(1/sampleTime);
for idx = 2:numel(tVec) 
    % Run the Pure Pursuit controller and convert output to wheel speeds
    [vRef,wRef] = controller(pose(:,idx-1));
    [wL,wR] = inverseKinematics(dd,vRef,wRef); 
  
    % Compute the velocities
    [v,w] = forwardKinematics(dd,wL,wR);
    velB = [v;0;w]; % Body velocities [vx;vy;w]
    vel = bodyToWorld(velB,pose(:,idx-1));  % Convert from body to world
    
    % Perform forward discrete integration step
    pose(:,idx) = pose(:,idx-1) + vel*sampleTime; 
    
    % Update visualization
    viz(pose(:,idx),waypoints)
    waitfor(r);
    
end
